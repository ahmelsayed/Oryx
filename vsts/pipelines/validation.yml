resources:
- repo: self
  fetchDepth: 15

variables:
- group: Oryx

jobs:
- job: Job_Security
  displayName: Security
  pool:
    name: Hosted VS2017
  steps:
  - template: templates/_securityChecks.yml

- job: Job_BuildImage
  displayName: Build and Test Build Image
  dependsOn: Job_Security
  condition: succeeded()
  pool:
    name: OryxLinux
  timeoutInMinutes: 100
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildBuildImages;]true"
      echo "##vso[task.setvariable variable=TestBuildImages;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
    displayName: 'Set variables'
  - template: templates/_buildTemplate.yml

- job: Job_RuntimeImages
  displayName: Build and Test Runtime Images
  dependsOn: Job_Security
  condition: succeeded()
  pool:
    name: OryxLinux
  timeoutInMinutes: 100
  steps:
  - script: |
      echo "##vso[task.setvariable variable=BuildRuntimeImages;]true"
      echo "##vso[task.setvariable variable=TestRuntimeImages;]true"
      echo "##vso[task.setvariable variable=PushBuildImages;]false"
      echo "##vso[task.setvariable variable=PushRuntimeImages;]false"
      echo "##vso[task.setvariable variable=EmbedBuildContextInImages;]true"
    displayName: 'Set variables'
  - template: templates/_buildTemplate.yml

- job: Job_ValidateIntegrationTests
  displayName: Validate Integration Tests
  dependsOn: 
    - Job_BuildImage
    - Job_RuntimeImages
  condition: succeeded()
  pool:
    name: OryxLinux
  timeoutInMinutes: 100
  steps:
  - script: |
      echo "##vso[task.setvariable variable=TestIntegrationCaseFilter;]category=db"
      echo "##vso[task.setvariable variable=TestIntegration;]true"
    displayName: 'Set variables'

  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs:
      artifactName: drop

  - task: ms-devlabs.utilitytasks.task-Shellpp.Shell++@0
    displayName: 'Pull and Retag recently built oryx build and runtime images'
    inputs:
      type: FilePath
      scriptPath: ./vsts/scripts/pullAndTag.sh
      args: $(System.ArtifactsDirectory)/drop/images/build-images-acr.txt $(System.ArtifactsDirectory)/drop/images/runtime-images-acr.txt
  
  - task: ms-devlabs.utilitytasks.task-Shellpp.Shell++@0
    displayName: 'Find and Run Uncategorized Integration Tests'
    inputs:
      type: FilePath
      scriptPath: ./build/testIntegrationValidation.sh
      args: $(System.ArtifactsDirectory)/drop/images/build-images-acr.txt $(System.ArtifactsDirectory)/drop/images/runtime-images-acr.txt
  
  - task: ShellScript@2
    displayName: 'Clean up Docker containers and images'
    inputs:
      scriptPath: ./vsts/scripts/cleanDocker.sh

  - task: ShellScript@2
    displayName: 'Clean up Docker mounted directories'
    inputs:
      scriptPath: ./vsts/scripts/removeDockerArtifacts.sh

trigger: none
